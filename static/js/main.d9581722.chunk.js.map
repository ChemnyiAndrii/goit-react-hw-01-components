{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","components/Profile/Profile.jsx","components/Statistics/randomColor.js","components/Statistics/Statistics.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","user","className","s","bg","profile","description","src","avatar","alt","name","tag","location","stats","label","quantity","followers","views","likes","defaultProps","generateColor","x","Math","floor","random","y","z","Statistics","title","styles","statistics","statList","map","stat","item","style","backgroundColor","color","percentage","id","FriendList","friends","friendList","isOnline","isActive","isnotActive","width","TransactionHistory","transactions","transactionHistory","type","amount","currency","App","statisticalData","friendsData","transactionHistoryData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9581722.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"Profile_bg__2Q1S1\",\"profile\":\"Profile_profile__2Z9Nl\",\"description\":\"Profile_description__3Mpiq\",\"avatar\":\"Profile_avatar__2gHrs\",\"name\":\"Profile_name__2LcaW\",\"tag\":\"Profile_tag__PKiov\",\"location\":\"Profile_location__5coPA\",\"label\":\"Profile_label__33wWf\",\"stats\":\"Profile_stats__3b3vp\",\"quantity\":\"Profile_quantity__3ldB0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2CRXa\",\"title\":\"Statistics_title__2MFKn\",\"statList\":\"Statistics_statList__29LOe\",\"item\":\"Statistics_item__3g8As\",\"label\":\"Statistics_label__8728E\",\"percentage\":\"Statistics_percentage__HwIM_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__L-W4i\",\"item\":\"FriendList_item__156SV\",\"isActive\":\"FriendList_isActive__2wXNT\",\"isnotActive\":\"FriendList_isnotActive__2JIPp\",\"avatar\":\"FriendList_avatar__3QNq9\",\"name\":\"FriendList_name__3ehqw\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Profile.module.css';\r\n\r\nconst Profile = ({ user }) => (\r\n  <div className={s.bg}>\r\n    <div className={s.profile}>\r\n      <div className={s.description}>\r\n        <img src={user.avatar} alt=\"user avatar\" className={s.avatar} />\r\n        <p className={s.name}>{user.name}</p>\r\n        <p className={s.tag}>@{user.tag}</p>\r\n        <p className={s.location}>{user.location}</p>\r\n      </div>\r\n\r\n      <ul className={s.stats}>\r\n        <li>\r\n          <span className={s.label}>Followers</span>\r\n          <span className={s.quantity}>{user.stats.followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className={s.label}>Views</span>\r\n          <span className={s.quantity}>{user.stats.views}</span>\r\n        </li>\r\n        <li>\r\n          <span className={s.label}>Likes</span>\r\n          <span className={s.quantity}>{user.stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nProfile.defaultProps = {\r\n  user: {},\r\n};\r\n\r\nProfile.propTypes = {\r\n  user: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    tag: PropTypes.string,\r\n    location: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n    stats: PropTypes.shape({\r\n      followers: PropTypes.number,\r\n      views: PropTypes.number,\r\n      likes: PropTypes.number,\r\n    }),\r\n  }),\r\n};\r\n\r\nexport default Profile;\r\n","const generateColor = () => {\r\n  const x = Math.floor(Math.random() * 256);\r\n  const y = Math.floor(Math.random() * 256);\r\n  const z = Math.floor(Math.random() * 256);\r\n  const bgColor = `rgb(${x}, ${y}, ${z})`;\r\n\r\n  return bgColor;\r\n  };\r\n  \r\n  export default generateColor;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\nimport color from './randomColor';\r\n\r\nconst Statistics = ({ title, stats }) => (\r\n  <section className={styles.statistics}>\r\n    {title && <h2 className={styles.title}>{title}</h2>}\r\n    <ul className={styles.statList}>\r\n      {stats.map(stat => (\r\n        <li\r\n          key={stat.id}\r\n          className={styles.item}\r\n          style={{ backgroundColor: color() }}\r\n        >\r\n          <span className={styles.label}>{stat.label}</span>\r\n          <span className={styles.percentage}>{stat.percentage}%</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './FriendList.module.css';\r\n\r\nconst FriendList = ({ friends }) => (\r\n  <ul className={styles.friendList}>\r\n    {friends.map(({ avatar, name, isOnline, id }) => (\r\n      <li className={styles.item} key={id}>\r\n        <span className={(isOnline?styles.isActive:styles.isnotActive)} />\r\n        <img\r\n          className={styles.avatar}\r\n          src={avatar}\r\n          alt=\"user avatar\"\r\n          width=\"80\"\r\n        />\r\n        <p className={styles.name}>{name}</p>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\nexport default FriendList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ transactions }) => (\r\n  <table className={styles.transactionHistory}>\r\n    <thead>\r\n      <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n    {transactions.map(({ id, type, amount, currency }) => (\r\n      <tbody key={id}>\r\n        <tr>\r\n          <td>{type}</td>\r\n          <td>{amount}</td>\r\n          <td>{currency}</td>\r\n        </tr>\r\n      </tbody>\r\n    ))}\r\n  </table>\r\n);\r\nTransactionHistory.propTypes = {\r\n  transactions: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\nexport default TransactionHistory;","import React from 'react';\n\nimport Profile from './components/Profile/Profile';\nimport user from './JSON/user.json';\n\nimport Statistics from './components/Statistics/Statistics';\nimport statisticalData from './JSON/statistical-data';\n\nimport FriendList from './components/FriendList/FriendList';\nimport friendsData from './JSON/friends.json';\n\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport transactionHistoryData from './JSON/transactions.json';\n\nconst App = () => (\n  <>\n    <Profile user={user} />\n    <Statistics title=\"File upload\" stats={statisticalData} />\n    <FriendList friends={friendsData} />\n    <TransactionHistory transactions={transactionHistoryData} />\n  </>\n);\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}